version: "3.8"

services:
  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chatbotai-app
    ports:
      - "8000:8000"
    environment:
      - DEBUG=False
      - HOST=0.0.0.0
      - PORT=8000
      - LOG_LEVEL=INFO
    env_file:
      - .env
    depends_on:
      - mongodb
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: chatbotai-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME:-chatbot_db}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # MongoDB Admin Interface
  mongo-express:
    image: mongo-express:1.0.2
    container_name: chatbotai-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME:-admin}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_USERNAME:-admin}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_PASSWORD:-password}
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
    depends_on:
      - mongodb
    profiles:
      - tools

  # Redis for caching (optional)
  redis:
    image: redis:7.2-alpine
    container_name: chatbotai-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    profiles:
      - tools

volumes:
  mongodb_data:
  redis_data:

networks:
  default:
    name: chatbotai-network
